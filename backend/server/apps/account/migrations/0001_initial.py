# Generated by Django 5.1.3 on 2024-11-11 16:02

import django.db.models.deletion
import phonenumber_field.modelfields
import server.apps.account.managers.account
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='CreatedAt')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='ModifiedAt')),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Identifier')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='EmailAddress')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this account should be treated as active. Unselect this instead of deleting accounts.', verbose_name='IsActive')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', server.apps.account.managers.account.AccountManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccountProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='CreatedAt')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='ModifiedAt')),
                ('first_name', models.CharField(max_length=128, verbose_name='FirstName')),
                ('last_name', models.CharField(max_length=128, verbose_name='LastName')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='PhoneNumber')),
                ('avatar', models.ImageField(default='account/avatars/avatar.png', upload_to='account/avatars/', verbose_name='Avatar')),
                ('id_card', models.CharField(max_length=32, null=True, unique=True, verbose_name='IdCard')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Account')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
